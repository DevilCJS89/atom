{
   /* Specify all sensors that are used in the calibration: Each sensor should have:
        <sensor_name>: {"link": <The frame of the sensor's data. The value of the sensor's message.header.frame_id.>,
                        "parent_link": <Parent frame of the transformation to be calibrated.>,
                        "child_link" : <Child frame of the transformation to be calibrated.>,
                        "topic_name" : <Name of the ros message topic that contains this sensor's data.>
        }
    */
    "sensors": {
         "right_camera": {
                "link": "right_camera_optical",
                "parent_link": "base_link",
                "child_link": "right_camera",
                "topic_name": "/right_camera/image_color"
        },
        "left_camera": {
                "link": "left_camera_optical",
                "parent_link": "base_link",
                "child_link": "left_camera",
                "topic_name": "/left_camera/image_color"
        },
       "center_lidar": {
                "link": "center_lidar",
                "parent_link": "some_parent_link",
                "child_link": "some_child_link",
                "topic_name": "/center_lidar/scan"
        }
    },

    /* Parametrization of the calibration pattern.
       @Eurico, can you add here a description for each field?
    */
    "calibration_pattern" : {
        "link": "chessboard_link",
        "parent_link": "base_link",
        "origin": [0.0, 0.0, 0.0, 1.5, 0.0, 0.0],
        "fixed": false,
        "pattern_type": "chessboard",
        "dictionary": "DICT_5X5_100",
        "border_size": 0.5,
        "dimension": {"x": 9, "y": 6},
        "size": 0.101,
        "inner_size": 0.014
    },

  /* Miscellaneous information */
    "anchored_sensor": "right_camera",     // Anchor a given sensor, making it immovable during the optimization.
    "world_link": "base_link",             // Frame of reference for the optimization procedure. Must exist in the
                                           //transformation chains of all the sensors which are being calibrated.
    "max_duration_between_msgs": 10000000  // Max time delta between sensor data messages when creating a collection.
}

